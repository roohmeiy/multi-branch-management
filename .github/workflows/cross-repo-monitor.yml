name: Cross-Repo Monitor

on:
  workflow_dispatch:

env:
  REPO_A_OWNER: roohmeiy
  REPO_A_REPO: my_ui_repo

jobs:
  monitor-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout REPO B
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
          fetch-depth: 0

      - name: Monitor changes and trigger deployments
        run: |
          # Get last deployed commits from REPO B's commit history
          LAST_EN_DEPLOY=$(git log --oneline --grep="EN:" -n 1 --pretty=format:"%s" | grep -o 'EN:[a-f0-9]\{7,\}' | cut -d: -f2 || echo '')
          LAST_FR_DEPLOY=$(git log --oneline --grep="FR:" -n 1 --pretty=format:"%s" | grep -o 'FR:[a-f0-9]\{7,\}' | cut -d: -f2 || echo '')
          
          echo "Last deployed from REPO B history:"
          echo "  EN: $LAST_EN_DEPLOY"
          echo "  FR: $LAST_FR_DEPLOY"
          
          # Get current commit SHAs from REPO A branches
          CURRENT_EN_SHA=$(curl -s -H "Authorization: token ${{ secrets.TOKEN }}" \
            "https://api.github.com/repos/${{ env.REPO_A_OWNER }}/${{ env.REPO_A_REPO }}/commits/en" | \
            jq -r '.sha[0:7]')
          
          CURRENT_FR_SHA=$(curl -s -H "Authorization: token ${{ secrets.TOKEN }}" \
            "https://api.github.com/repos/${{ env.REPO_A_OWNER }}/${{ env.REPO_A_REPO }}/commits/fr" | \
            jq -r '.sha[0:7]')
          
          echo "Current commits in REPO A:"
          echo "  EN: $CURRENT_EN_SHA"
          echo "  FR: $CURRENT_FR_SHA"
          
          # Check and trigger EN deployment if changed
          if [ "$LAST_EN_DEPLOY" != "$CURRENT_EN_SHA" ] && [ -n "$CURRENT_EN_SHA" ]; then
            echo "üöÄ EN branch changed! Triggering EN deployment in REPO A..."
            
            # Trigger EN deployment workflow in REPO A main branch
            curl -X POST \
              -H "Authorization: token ${{ secrets.TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ env.REPO_A_OWNER }}/${{ env.REPO_A_REPO }}/actions/workflows/en-deployment.yml/dispatches" \
              -d '{"ref":"main","inputs":{"triggered_by":"repo-b-monitor","source_branch":"en","commit_sha":"'$CURRENT_EN_SHA'"}}'
            
            # Record deployment in REPO B
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit --allow-empty -m "Deploy EN:$CURRENT_EN_SHA from REPO A [skip ci]"
            git push
          else
            echo "‚è∏ EN branch: No changes detected"
          fi
          
          # Check and trigger FR deployment if changed
          if [ "$LAST_FR_DEPLOY" != "$CURRENT_FR_SHA" ] && [ -n "$CURRENT_FR_SHA" ]; then
            echo " FR branch changed! Triggering FR deployment in REPO A..."
            
            # Trigger FR deployment workflow in REPO A main branch
            curl -X POST \
              -H "Authorization: token ${{ secrets.TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ env.REPO_A_OWNER }}/${{ env.REPO_A_REPO }}/actions/workflows/fr-deployment.yml/dispatches" \
              -d '{"ref":"main","inputs":{"triggered_by":"repo-b-monitor","source_branch":"fr","commit_sha":"'$CURRENT_FR_SHA'"}}'
            
            # Record deployment in REPO B
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit --allow-empty -m "Deploy FR:$CURRENT_FR_SHA from REPO A [skip ci]"
            git push
          else
            echo " FR branch: No changes detected"
          fi
